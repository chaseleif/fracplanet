ABOUT
=====
Fracplanet generates random planets and terrain with oceans, 
mountains, icecaps and rivers.  Parameters are specified interactively 
and the results displayed using OpenGL.  The generated objects can be
dumped to Pov-Ray format.

It uses C++ (with STL), Qt and OpenGL.  

Home page: http://www.bottlenose.demon.co.uk/share/fracplanet

Author: timday at timday dot com

LICENSE
=======
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

[The license should be in the LICENSE file in this directory]

BUILDING
========
Either use the traditional
 ./configure
 make
(NB The configure script is NOT autoconf generated)

Or just have both done for you by running 
  ./BUILD
(which also adds $QTDIR/bin to the PATH while running the above commands;
this may be useful on the many distros which don't have qmake in the default
user path).

NB In either case you do almost certainly DO need your QTDIR 
environment variable to be correctly defined.

This will give you a "fracplanet" executable which you can run with
  ./fracplanet
or install where you like. 

If you have xsltproc (and sed) installed then you should get a copy of the
fracplanet.htm documentation built into the application.

[The author primarily uses Debian Sarge these days].

[Selden E Ball Jr reports that "FracPlanet v0.2 builds and runs
with no errors under the current version of Cygwin for Windows. 
Of course, the appropriate optional software development subsets
have to be installed."]

BUILD OPTIONS
=============
There are already some generally effective overrides for 
Qt's usually fairly conservative compile options 
in the fracplanet.pro file (where QMAKE_CXXFLAGS_RELEASE is
modified).  If you change them, do a "make distclean" before 
you rebuild to make sure Makefiles are rebuilt. 

The easiest way to get some additional CPU-specific optimisations
is to use the configuration option:
  ./configure <cpu>
where <cpu> is "p3", "p4" or "xp" as appropriate e.g "./configure p4"
and rebuild from clean (again, "make distclean" is a good idea).
I've no idea how much benefit these provide.
You can also use these with the ./BUILD script e.g "./BUILD p4"

BUILD PROBLEMS
==============
- For a Debian system with nvidia-glx it is perhaps necessary to have
nvidia-glx-dev installed when you build otherwise the application does
not function properly.

USAGE
=====
User documentation is contained in fracplanet.htm
If you just want to dive in all you need to know is this:
  
After changing ANY of the terrain generation parameters, you must 
hit "regenerate" to create and display a new model.
This keeps the random seeds for terrain and river generation the same.
There are a couple of extra buttons which also change the random seed 
for the terrain or river network before regenerating,
Most of the parameter entry fields have tooltips on them which 
give an idea of what they're about.
To begin with it's best to start by making small changes
to most parameters, especially the number of subdivisions.

PERFORMANCE
===========
The biggest factor influencing performance (both generation and 
display) is the degree of subdivision.  For 9 subdivisions
(for a planet) around 260MB of memory is required.  10 subdivisions
needs just over a gigabyte.  Needless to say, if it starts swapping,
it's not pretty.
On a 2.4GHz machine with a GeForce4 (well, an "MX") and the Nvidia OpenGL
drivers display rates start to suffer around subdivision level 7 (for planets).
A 5200 will get to the next level.  
See the BUGS file for other issues.

INSTALL
=======
Doing 
  make install
will attempt to install the executable in 
  /usr/local/bin
and some HTML user documentation (fracplanet.htm and fracplanet.css ) in 
  /usr/local/share/doc/fracplanet
Obviously you'll probably need to be root for this stage.

BUILDING CODE DOCUMENTATION
===========================
If you have doxygen (and graphviz) and want to build the code documentation
subdirectory too, execute 
  ./mkdoc
The comments may not be particularly useful, or up to date :^)

THANKS
======
For bug reports, feedback and patches:
  Tobias Klausmann 
  Frank Plohmann 
  Steve Roylance 
  Leon Brooks 
  Selden E Ball Jr

