- .debs should create a menu entry.  Check it works on Ubuntu too.
- Check clouds tab's documentation.
- More control over clouds.
- Texture render should also output a specular map for celestia.
- Add an option to load vertex heights from a DEM
  (would replace mid-point perturbation during subdivision;
  would retain our colouring rules, ability to add noise, rivers etc).
- Texture render for clouds.
  Will end up with duplicate code in cloud mesh's ScanConvertHelper; use boost MPL/Fusion
  to produce generic version operating on general tuples ?
- Craters.
- X gets bigger when using display lists (remote only?) ?  Need to delete on exit ?
- Find out what the errors are this guy mentions:
    http://douglas.nerad.org/journal/2006/04/03/
- More control over weather and clouds.
- Another noise fn to modulate (c.f add) subdivided terrain.
  Might help reduce middle-of-continent highlands.
- Another noise fn to modulate power law
  (could get a mix of highland mesas and deposited lowlands).
- Use Qtime (getCurrentTime) instead of time (more portable ?).
- Abort on progress bar (throw exception out to top level ?  Hmmm)
- Make colours depend on more interesting things than height (e.g slope)
- Reshow, so don't need to regenerate after hiding viewer
- Does POV-Ray mesh support given vertex normals ?
  Renderings show facet shading with smooth colouring, which is
  legitimate but maybe not what's wanted.
  (Hmmm can't actually remember how fracplanet does this but it doesn't
  show facets).
- Move blender/pov save parameters into nested classes,
  pass parameters into lowest-level save fns rather than multiple args.
- Scale parameter for blender output.
- Ability to load/save fracplanet parameters (simple keyword=value text file)
- Mesh optimisation.
- Save clouds as some more blender-friendly texture type thing.
- Rename Save to Export.
  (Eventually want Save/Load/Export POV-Ray/Export Blender/Export Texture/Import Texture).
- Cloud controls.  Noise parameters and thresholds.
- More control over cloud undersides, shadowing etc (c.f on/off in POVRay).
  (Add checkboxes to POVRay save dialog).
  Maybe need better control over ambient, or actually use the ambient
  parameter on the render tab (move to colours).  Then shadows
  wouldn't be black; wouldn't get a night-side though, without varying
  ambient around sphere.
- Shadows of clouds on ground in OpenGL (needs shaders, shadow buffers etc).
- Optimise matix33 inversion
- End abuse of alpha as flag; just use it as the emissive quantity.
  Mesh then gets a flag for meaning of alpha channels.
- Terrain patches but with planetary geometry (ie curvature).
  This would give a sensible horizon when near the centre of the patch.
- Control over treeline and shoreline heights (these are hardwired currently).
- Clean up progress stuff; push steps->% (rate management) into progress API.
- std::auto_ptr sucks; use something better from boost
- Add perturbation decay rate for subdivision too.
- Noise perturbation in X&Y too;
  might help break up subdivision ridge artefacts
- Basic "man" page besides HTML
- Make more keys do stuff in fly mode (e.g home to return to start).
- Console mode app: read parameters, generate planet.
- Fix river/lake hang for high subdivision levels
- Perlin noise to modify terrain colours.
- Continue GUI procesing when progressing.
- More feedback (progress bar?) when building display list
  (unfortunately a lot of the delay happens in OpenGL when the list is completed)
- Borrow some improvements from sister evolvotron project
- Check for OpenGL errors
- Add control over heights at which colours switch.
- Improve code documentation.
- Save/load parameters.  Automatic mode (load parameters, generate model, exit).
- Seasonal variations.
  e.g snowline, ice packs on ocean.
- Ability to save sequences of models
  (probably by offline generation for parameter file load)
- Are we 64bit ready ?  Onwards to subdivision levels 12,13,14...
- Put ONLY the terrain data in the .inc file; rest in .pov or a different .inc
- Split up mesh file (3 parts: vertices, colours, meshing)
- Ringworld and Dyson sphere/hollow-Earth starting geometries for fun.
- yafray export (note povray not available for sparc, but yafray is)
